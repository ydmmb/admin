apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionName rootProject.ext.android.versionName
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath true } }
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        debug {
        }
        release {
        }
    }
    buildTypes {

        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            //混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                def fileName = outputFileName.replace(".apk", "-${defaultConfig.versionName}.apk")
                outputFileName = fileName
            }
        }
    }
    buildToolsVersion '26.0.3'
    productFlavors {
    }
}
repositories {
    maven { url "https://jitpack.io" }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    //base
    compile rootProject.ext.dependencies["appcompat-v7"]
    //network
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    compile rootProject.ext.dependencies["okhttp-logging-interceptor"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-transformations"]
    //rx
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    //ui
    compile rootProject.ext.dependencies["easyrecyclerview"]
    compile rootProject.ext.dependencies["rollviewpager"]
    compile rootProject.ext.dependencies["smarttablayout"]
    compile rootProject.ext.dependencies["smarttablayout:utils"]
    compile rootProject.ext.dependencies["jiecaovideoplayer"]
    compile rootProject.ext.dependencies["extroplayer"]
    compile rootProject.ext.dependencies["cardstack"]
    compile rootProject.ext.dependencies["roundedimageview"]
    compile rootProject.ext.dependencies["cardview"]
    compile rootProject.ext.dependencies["material-dialogs"]
    compile rootProject.ext.dependencies["material-dialogs:commons"]
    compile rootProject.ext.dependencies["icarus"]

    compile rootProject.ext.dependencies["iconics-core"]
    compile rootProject.ext.dependencies["material-design-iconic-typeface"]
    compile rootProject.ext.dependencies["fontawesome-typeface"]
    compile rootProject.ext.dependencies["foundation-icons-typeface"]
    //di
    compile rootProject.ext.dependencies["dagger"]
    compile rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    provided rootProject.ext.dependencies["annotation"]
    compile rootProject.ext.dependencies["annotations"]
    //other
    compile rootProject.ext.dependencies["logger"]
    compile rootProject.ext.dependencies["fragmentation"]
    compile rootProject.ext.dependencies["androideventbus"]
    compile rootProject.ext.dependencies["pgyersdk"]
    compile rootProject.ext.dependencies["slf4j"]
    compile rootProject.ext.dependencies["alipay"]
    compile rootProject.ext.dependencies["floatingsearchview"]
    compile rootProject.ext.dependencies["largeimageview"]
    compile rootProject.ext.dependencies["okhttp3inte"]
    compile rootProject.ext.dependencies["ringprogressbar"]
    compile rootProject.ext.dependencies["nanohttpd"]
    compile rootProject.ext.dependencies["tigervideoplayer"]
    compile rootProject.ext.dependencies["commons-io"]
    compile rootProject.ext.dependencies["filedownloader"]

    //canary
    debugCompile rootProject.ext.dependencies["blockcanary-android"]
    releaseCompile rootProject.ext.dependencies["blockcanary-no-op"]
    debugCompile rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile rootProject.ext.dependencies["leakcanary-android-no-op"]
}
